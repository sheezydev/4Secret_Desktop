<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CLUpdate</name>
    </assembly>
    <members>
        <member name="T:ChaseLabs.CLUpdate.Interfaces.IUpdater">
            <summary>
            The Interface Class for the Updater
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Interfaces.IUpdater.URL">
            <summary>
            Returns the Download URL
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Interfaces.IUpdater.ZipDirectory">
            <summary>
            The Temp Directory in Which the Zip File will Reside
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Interfaces.IUpdater.UnzipDirectory">
            <summary>
            The Directory in Which the Application File will Reside
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Interfaces.IUpdater.LaunchExecutableName">
            <summary>
            The Executable to be Launched apon Completion
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Interfaces.IUpdater.OverwriteDirectory">
            <summary>
            Returns Weather or not to remove all files in a directory or just skip them
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Interfaces.IUpdater.Download">
            <summary>
            Downloads the Zip Archive From URL
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Interfaces.IUpdater.Unzip">
            <summary>
            Unzips the Zip Archive to Application Directory
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Interfaces.IUpdater.CleanUp">
            <summary>
            Removes the Zip Archive and Temp Directory
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Interfaces.IUpdater.LaunchExecutable">
            <summary>
            Launches the Applications Executable
            </summary>
        </member>
        <member name="T:ChaseLabs.CLUpdate.Lists.Versions">
            <summary>
            <para>
            Author: Drew Chase
            </para>
            <para>
            Company: Chase Labs
            </para>
            </summary>
        </member>
        <member name="F:ChaseLabs.CLUpdate.Lists.Versions.VersionManager">
            <summary>
            The Config Manager Object of the Current Version File
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Lists.Versions.#ctor(System.String)">
            <summary>
            Initializes the Version File in the Path
            </summary>
            <param name="VersionFilePath"></param>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Lists.Versions.AddVersion(ChaseLabs.CLUpdate.Objects.Version)">
            <summary>
            Adds a Version Object to the Version File.
            </summary>
            <param name="version"></param>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Lists.Versions.AddVersion(System.String,System.String)">
            <summary>
            Adds a Version using a Key and Value
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Lists.Versions.GetVersion(System.String)">
            <summary>
            Gets the Version based on the Key
            <para>Returns Null if Not Found</para>
            </summary>
            <param name="key"></param>
            <returns>Version Object</returns>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Lists.Versions.GetChangeLog(System.String)">
            <summary>
            Gets the Version Changelog
            <para>Returns Empty String If Not Found</para>
            </summary>
            <param name="key">Optional</param>
            <returns>Full Changelog</returns>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Lists.Versions.RemoveVersion(System.String)">
            <summary>
            Removes the Version with specified Key
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Lists.Versions.UpdateVersion(System.String,System.String)">
            <summary>
            Updates the Versions Value based on specified Key
            <para>Adds a New Version with Key and Value if one did not previously exist</para>
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:ChaseLabs.CLUpdate.Objects.Version">
            <summary>
            <para>
            Author: Drew Chase
            </para>
            <para>
            Company: Chase Labs
            </para>
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Objects.Version.Key">
            <summary>
            The Version Key
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Objects.Version.Value">
            <summary>
            The Version Value
            </summary>
        </member>
        <member name="T:ChaseLabs.CLUpdate.UpdateManager">
            <summary>
            <para>
            Author: Drew Chase
            </para>
            <para>
            Company: Chase Labs
            </para>
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.UpdateManager.LocalVerions">
            <summary>
            Gets the Local Version Object
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.UpdateManager.RemoteVersions">
            <summary>
            Gets the Remote Version Object
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.UpdateManager.Singleton">
            <summary>
            A Static Single Object
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.UpdateManager.Init(System.String,System.String)">
            <summary>
            Run Before Anything Else
            </summary>
            <param name="localVersionFilePath"></param>
            <param name="versionURL"></param>
        </member>
        <member name="M:ChaseLabs.CLUpdate.UpdateManager.Update(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Automatically Checks for Update and Downloads if Needed
            <para>Version Files Should be Orginized Like so</para>
            <code>Version Key 1.0.0</code>
            </summary>
            <param name="versionKey">The Label before the Version Numbers</param>
            <param name="localVersionFilePath">The Path to the current Version File, If not found it will automatically update</param>
            <param name="remoteVersionFilePath">The URL to the updated Version File</param>
            <param name="zipUrl">The Direct Download URL to the Update Zip Archive</param>
            <param name="zipDirectory">The Temp Directory where the Zip Archive will be Downloaded</param>
            <param name="unzipDirectory">The Application Directory</param>
            <param name="launchExecutableName">The Application Executable Path</param>
            <param name="overwrite">Weather to Clear the Application Directory Prior to Unziping</param>
        </member>
        <member name="M:ChaseLabs.CLUpdate.UpdateManager.UpdateVersionFile(System.String)">
            <summary>
            Updates the Local Version to the Updated One.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:ChaseLabs.CLUpdate.UpdateManager.CheckForUpdate(System.String,System.String,System.String)">
            <summary>
            Checks if an Update is Needed
            <para>Version Files Should be Orginized Like so</para>
            <code>Version Key 1.0.0</code>
            </summary>
            <param name="versionKey">The Label before the Version Numbers</param>
            <param name="localVersionFilePath">The Path to the current Version File, If not found it will automatically update</param>
            <param name="remoteVersionFilePath">The URL to the updated Version File</param>
            <returns>True = Needs Update | False = Doesn't Need Update</returns>
        </member>
        <member name="M:ChaseLabs.CLUpdate.UpdateManager.GetExecutableName(System.String)">
            <summary>
            Get Executable Name Stored in the Remote Verion File
            </summary>
            <param name="exe_key"></param>
            <returns></returns>
        </member>
        <member name="M:ChaseLabs.CLUpdate.UpdateManager.GetArchiveURL(System.String)">
            <summary>
            Get Archive Download URL Stored in the Remote Verion File
            </summary>
            <param name="url_key"></param>
            <returns></returns>
        </member>
        <member name="T:ChaseLabs.CLUpdate.Updater">
            <summary>
            <para>
            Author: Drew Chase
            </para>
            <para>
            Company: Chase Labs
            </para>
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Updater.URL">
            <summary>
            Returns the Download URL
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Updater.ZipDirectory">
            <summary>
            The Temp Directory in Which the Zip File will Reside
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Updater.UnzipDirectory">
            <summary>
            The Directory in Which the Application File will Reside
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Updater.LaunchExecutableName">
            <summary>
            The Executable to be Launched apon Completion
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Updater.OverwriteDirectory">
            <summary>
            Returns Weather or not to remove all files in a directory or just skip them
            </summary>
        </member>
        <member name="P:ChaseLabs.CLUpdate.Updater.DownloadClient">
            <summary>
            Returns the Current Download Client
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Updater.Init(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            A Static Method to Initialize the Updater
            </summary>
            <param name="_url">The Direct Download URL of the Zip File</param>
            <param name="_zipDirectory">The Temp Directory to Download the Zip Archive</param>
            <param name="_unzipDirectory">The Application Directory</param>
            <param name="_launchExecutableName">The Application Executable to Launch Apon Completion</param>
            <param name="_overwrite">Weather to Clear the Application Directory Prior to Unziping</param>
            <returns></returns>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Updater.Download">
            <summary>
            Downloads the Zip Archive From URL
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Updater.Unzip">
            <summary>
            Unzips the Zip Archive to Application Directory
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Updater.CleanUp">
            <summary>
            Removes the Zip Archive and Temp Directory
            </summary>
        </member>
        <member name="M:ChaseLabs.CLUpdate.Updater.LaunchExecutable">
            <summary>
            Launches the Applications Executable
            </summary>
        </member>
    </members>
</doc>
